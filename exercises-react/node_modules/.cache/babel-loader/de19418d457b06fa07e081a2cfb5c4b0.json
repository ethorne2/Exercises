{"ast":null,"code":"var _jsxFileName = \"/Users/elizabeththorne/CS290/assignment6/exercises-react/src/pages/EditMoviePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditMoviePage = _ref => {\n  _s();\n\n  let {\n    movieToEdit\n  } = _ref;\n  const [title, setTitle] = useState(movieToEdit.title);\n  const [year, setYear] = useState(movieToEdit.year);\n  const [language, setLanguage] = useState(movieToEdit.language);\n  const history = useHistory();\n\n  const editMovie = async () => {\n    const editedMovie = {\n      title,\n      year,\n      language\n    };\n    const response = await fetch(`/movies/${movieToEdit._id}`, {\n      method: 'PUT',\n      body: JSON.stringify(editedMovie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (response.status === 200) {\n      alert(\"Successfully edited the movie\");\n    } else {\n      alert(`Failed to edit movie, status code = ${response.status}`);\n    }\n\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: year,\n      onChange: e => setYear(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: language,\n      onChange: e => setLanguage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: editMovie,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditMoviePage, \"3S8p44n3xGKeC3S9tAZiLWUclB4=\", false, function () {\n  return [useHistory];\n});\n\n_c = EditMoviePage;\nexport default EditMoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMoviePage\");","map":{"version":3,"sources":["/Users/elizabeththorne/CS290/assignment6/exercises-react/src/pages/EditMoviePage.js"],"names":["React","useState","useHistory","EditMoviePage","movieToEdit","title","setTitle","year","setYear","language","setLanguage","history","editMovie","editedMovie","response","fetch","_id","method","body","JSON","stringify","headers","status","alert","push","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,OAAO,MAAMC,aAAa,GAAG,QAAqB;AAAA;;AAAA,MAApB;AAAEC,IAAAA;AAAF,GAAoB;AAE9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACG,WAAW,CAACC,KAAb,CAAlC;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACG,WAAW,CAACG,IAAb,CAAhC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACG,WAAW,CAACK,QAAb,CAAxC;AAEA,QAAME,OAAO,GAAGT,UAAU,EAA1B;;AAEA,QAAMU,SAAS,GAAG,YAAY;AAC1B,UAAMC,WAAW,GAAG;AAACR,MAAAA,KAAD;AAAQE,MAAAA,IAAR;AAAcE,MAAAA;AAAd,KAApB;AACA,UAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAE,WAAUX,WAAW,CAACY,GAAI,EAA5B,EAA+B;AACvDC,MAAAA,MAAM,EAAE,KAD+C;AAEvDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,WAAf,CAFiD;AAGvDQ,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAH8C,KAA/B,CAA5B;;AAOA,QAAGP,QAAQ,CAACQ,MAAT,KAAoB,GAAvB,EAA2B;AACvBC,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACH,KAFD,MAEM;AACFA,MAAAA,KAAK,CAAE,uCAAsCT,QAAQ,CAACQ,MAAO,EAAxD,CAAL;AACH;;AACDX,IAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACH,GAfD;;AAiBA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAEnB,KAFX;AAGI,MAAA,QAAQ,EAAEoB,CAAC,IAAInB,QAAQ,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV;AAH3B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAEpB,IAFX;AAGI,MAAA,QAAQ,EAAEkB,CAAC,IAAIjB,OAAO,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,YANJ,eAUI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAElB,QAFX;AAGI,MAAA,QAAQ,EAAEgB,CAAC,IAAIf,WAAW,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV;AAH9B;AAAA;AAAA;AAAA;AAAA,YAVJ,eAcI;AACI,MAAA,OAAO,EAAEf,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA9CM;;GAAMT,a;UAMOD,U;;;KANPC,a;AAgDb,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const EditMoviePage = ({ movieToEdit }) => {\r\n\r\n    const [title, setTitle] = useState(movieToEdit.title);\r\n    const [year, setYear] = useState(movieToEdit.year);\r\n    const [language, setLanguage] = useState(movieToEdit.language);\r\n\r\n    const history = useHistory();\r\n\r\n    const editMovie = async () => {\r\n        const editedMovie = {title, year, language};\r\n        const response = await fetch(`/movies/${movieToEdit._id}`, {\r\n            method: 'PUT', \r\n            body: JSON.stringify(editedMovie), \r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        if(response.status === 200){\r\n            alert(\"Successfully edited the movie\");\r\n        } else{\r\n            alert(`Failed to edit movie, status code = ${response.status}`);\r\n        }\r\n        history.push(\"/\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Edit Movie</h1>\r\n            <input\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={e => setTitle(e.target.value)} />\r\n            <input\r\n                type=\"number\"\r\n                value={year}\r\n                onChange={e => setYear(e.target.value)} />\r\n            <input\r\n                type=\"text\"\r\n                value={language}\r\n                onChange={e => setLanguage(e.target.value)} />\r\n            <button\r\n                onClick={editMovie}\r\n            >Save</button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default EditMoviePage;"]},"metadata":{},"sourceType":"module"}